#!/bin/bash
source $(dirname ${BASH_SOURCE})/../lib/header
import vcs/git/hub
import sys/dir
import gui

function help/gitmgr() {
  cat << EOF

Github Manager

Usage: ${gbn} options
              -p - pull
              -r - rebase pull
              -s - status
              -m push message
              -d directory
EOF
  exit ${_false_}
}

### args
_d="."
_m=""
_p=false
_r=false
_s=false
while getopts hvprsm:d: o; do
  case "$o" in
    m) _m=$OPTARG;;
    d) _d=$OPTARG;;
    p) _p=true;;
    r) _r=true;;
    s) _s=true;;
    v) gdbg=true;;
    h|*) help/gitmgr;;
  esac
done

### main
sys/dir/svwd "${_d}"

echo
msg "Directory: ${PWD}"
gui/line

if test -r "./.${gbn}" ; then
  cat "./.${gbn}"
  gui/line
fi

if ! $(vcs/git/hub/test) ; then
  msg "Not a git directory"
  exit ${_false_}
fi

# status
if ${_s} ; then
  msg "Status"
  gui/line
  ${vcs_git_hub_git} status
  exit $?
fi

if ${_p} ; then
  opts=""
  if ${_r} ; then
    opts="--rebase"
  fi
  answer "Pull from gtihub?"
  if test $? -gt 0 ; then
    exit ${_false_}
  fi
  ${vcs_git_hub_git} pull ${opts} origin master
  exit $?
fi

# commit
if test "${_m}" = "" ; then
  echo -n "[${gbn}] Commit Message: "
  read _m
fi
git add .
git commit -a -m "${_m}"

# push
answer "Push to gtihub?"
if test $? -gt 0 ; then
  exit ${_false_}
fi
git push origin master
