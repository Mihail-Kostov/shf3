function run/init/bcast() {
  import sys/zip
  local _src="${1}"
  local _dst="${2}"

  if test -z "${_src}" ; then
    return ${_false_}
  fi
  if test -z "${_dst}" ; then
    _dst=$(basename "${_src}")
  fi

  # directories
  local _wdir=$(ns/op/name "${WORKDIR}")

  if test -d "${_src}" ; then
    # broadcast
    if $(ns/isop "${WORKDIR}" "+") ; then
      msg "Broadcast is not supported for directories"
      return ${_false_}
    fi

    # normal copy
    sys/zip/cpuzmv "${_src}" "${_wdir}" "${_dst}"
    if test $? -gt 0 ; then
      msg "Copy failed: ${_src}"
      return ${_false_}
    fi
    return ${_true_}
  fi

  # files
  if test -f "${_src}" ; then
    # broadcast
    if $(ns/isop "${WORKDIR}" "+") ; then
      local _sdir=$(ns/op/name "${STAGEDIR}")

      if test -z "${BROADCAST}" ; then
        msg "\$BROADCAST not set"
        return ${_false_}
      fi

      if ! test -d "${_sdir}" ; then
        msg "Stage dir not found: ${_sdir}"
        return ${_false_}
      fi

      sys/zip/cpuzmv "${_src}" "${_sdir}" "${_dst}"
      if test $? -gt 0 ; then
        msg "Stage failed: ${_src}"
        return ${_false_}
      fi

      ${BROADCAST} "${_sdir}/${_dst}" "${_wdir}/${_dst}"
      if test $? -gt 0 ; then
        msg "Broadcast failed: ${_src}"
        return ${_false_}
      fi
      return ${_true_}
    fi

    # normal copy
    sys/zip/cpuzmv "${_src}" "${_wdir}" "${_dst}"
    if test $? -gt 0 ; then
      msg "Copy failed: ${_src}"
      return ${_false_}
    fi
  fi

  msg "File type not supported: ${_src}"
  return ${_false_}
}


function run/init/main() {
  if test -z "${MAININPUT}" ; then
    return ${_false_}
  fi

  # operator clean name
  local _idir=$(ns/op/name "${INPUTDIR}")
  local _inp=$(ns/op/name "${MAININPUT}")
  _inp="${_idir}/${_inp}"
  run/init/bcast "${_inp}"
}

function run/init/data() {
  if test -z "${DATA}" ; then
    return ${_true_}
  fi

  # operator clean name
  local _ddir=$(ns/op/name "${DATADIR}")

  local dat
  local _dat
  for dat in ${DATA}; do
    _dat="${_ddir}/${dat}"
    if ! test -r "${_dat}" ; then
      msg "Data not found: ${_dat}"
      return ${_false_}
    fi
    run/init/bcast "${_dat}"
    if test $? -gt 0 ; then
      return ${_false_}
    fi
  done
  return ${_true_}
}

function run/init/other() {
  if test -z "${OTHERINPUT}" ; then
    return ${_true_}
  fi

  # operator clean name
  local _idir=$(ns/op/name "${INPUTDIR}")

  local inp
  local _inp
  for inp in ${OTHERINPUT}; do
    _inp="${INPUTDIR}/${inp}"
    if ! test -r "${_inp}" ; then
      msg "Input not found: ${_inp}"
      return ${_false_}
    fi
    run/init/bcast "${_inp}"
    if test $? -gt 0 ; then
      return ${_false_}
    fi
  done
  return ${_true_}
}
