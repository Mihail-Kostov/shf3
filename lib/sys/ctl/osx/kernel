function help/sys/ctl/osx() {
  cat << EOF

On Os X query the kernel state by sysctl.

EOF
}

function sys/ctl/osx/get() {
  local _mib=$(ns/mib "${1}")
  if empty "${_mib}" ; then $failure; fi

  ${sys_ctl_osx} "${_mib}"
}

function sys/ctl/osx/set() {
  local _mib=$(ns/mib "${1}")
  shift
  local _val="${1}"

  if empty "${_mib}" ; then $failure; fi

  if empty "${_val}" ; then $failure; fi

  sudo ${sys_ctl_osx} -w "${_mib}=${_val}"
}

function sys/ctl/osx/all() {
  ${sys_ctl_osx} -a
}

function sys/ctl/osx/search() {
  local _s="${1}"
  if empty "${_s}" ; then $failure; fi

  sys/ctl/osx/all | grep "${_s}"
}

function sys/ctl/osx/cpuinfo() {
  sys/ctl/osx/search hw\\.
}

function sys/ctl/osx/lsmod() {
  if test "${1}" = "kext" ; then
    ${sys_ctl_osx_kextstat}
    return $?
  fi
  printf "%4s %-56s %8s %s\n" "No" "Module" "Size" "Used by"
  ${sys_ctl_osx_kextstat} -l | \
  awk '{
    no=$1;
    mod=$6;
    size=$4;
    split($0,a,"<");
    sub(">","",a[2]);
    used=a[2];
    printf("%4d %-56s %8d %s\n",no,mod,size,used);
  }'
}

function sys/ctl/osx/rmmod() {
  local _mib=$(ns/mib "${1}")
  if empty "${_mib}" ; then $failure; fi

  answer "Unload module ${_mib}?"
  if failed $? ; then $failure; fi

  ${sys_ctl_osx_kextunload} -b "${_mib}"
}

function sys/ctl/osx/modprobe() {
  local _mib=$(ns/mib "${1}")
  if empty "${_mib}" ; then $failure; fi

  answer "Load module ${_mib}?"
  if failed $? ; then $failure; fi

  ${sys_ctl_osx_kextutil} -b "${_mib}"
}
