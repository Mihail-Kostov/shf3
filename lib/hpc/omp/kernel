# OpenMP

function hpc/omp/binding() {
  local _thr=${1:-1}
  local _bat=${2}

  # redistribution for multi-step
  if empty "${_bat}" ; then
    export OMP_NUM_THREADS=${_thr}
    if test ${_thr} -gt 1 ; then
      export OMP_PROC_BIND=TRUE
      export OMP_NESTED=FALSE
      export OMP_STACKSIZE=16M
      if ${_mode}
    fi
    echo "OMP binding: ${_thr} threads"
    $success
  fi

  # static
  if ! readable "${_bat}" ; then $failure ; fi

  echo "export OMP_NUM_THREADS=${_thr}" >> "${_bat}"
  if test ${_thr} -gt 1 ; then
    echo "export OMP_PROC_BIND=TRUE"    >> "${_bat}"
    echo "export OMP_NESTED=FALSE"      >> "${_bat}"
    echo "export OMP_STACKSIZE=16M"     >> "${_bat}"
  fi
}

function help/hpc/omp/affinity() {
  cat <<EOF
Manual: http://software.intel.com/sites/products/documentation/studio/composer/en-us/2011/compiler_c/optaps/common/optaps_openmp_thread_affinity.htm"

use compact or scatter for binding

EOF
}

function hpc/omp/affinity() {
  local _thr=${1:-1}
  local _bat=${2}

  if ! empty "${BIND}" ; then
    if empty "${_bat}" ; then
      export KMP_AFFINITY="${BIND}"
    else
      export KMP_AFFINITY="${BIND}"
    fi
  fi
}

