
function que/ll() {
  local _mode="${1:-S}"
  local _qbat="${2:-ll.batch.sh}"
#  local _con=""
#  local _const=""

  if test "${_mode}" = "L" ; then
    _bat="${2:-ll.login.sh}"
  fi
  if ! test -r "${_bat}" ; then
    msg "Batch file not found"
    return ${_false_}
  fi

  ### begin login
  if test "${_mode}" = "L" ; then
    echo "Login is not implemented"
    return ${_false_}
  fi
  ### end login

  # submit
  # name
  echo "#${que_ll_qsub} job_name = ${NAME}"                 >> "${_bat}"

  # mail
  if ! test -z "${QMAIL}" && test "${QMAIL}" != "runprg" ; then
    echo "#${que_ll_qsub} notification = ${QMAIL}"          >> "${_bat}"
    if ! test -z "${QMAILTO}" ; then
      echo "#${que_ll_qsub} notify_user = ${QMAILTO}" >> "${_bat}"
    fi
  fi

  # time
  if ! test -z "${TIME}" ; then
    echo "#${que_ll_qsub} wall_clock_limit = ${TIME}"       >> "${_bat}"
  fi

  # memory
  if ! test -z "${MEMORY}" ; then
    echo "#${que_ll_qsub} requirements=(Memory > ${MEMORY}${que_ll_unit})" >> "${_bat}"
  fi

  if ! test -z "${NODES}" ; then
    echo "#${que_ll_qsub} node = ${NODES}"                  >> "${_bat}"
  fi

  if test "${MPIOMP}" = "yes" ; then
    if ! test -z "${SCKTS}" ; then
      echo "#${que_ll_qsub} tasks_per_node = ${SCKTS}"      >> "${_bat}"
    fi
    if ! test -z "${CORES}" ; then
      echo "#${que_ll_qsub} parallel_threads = ${CORES}"    >> "${_bat}"
      echo "#${que_ll_qsub} task_affinity = core(${CORES})" >> "${_bat}"
    fi
  else
    if ! test -z "${TASKS}" ; then
      echo "#${que_ll_qsub} tasks_per_node = ${TASKS}"      >> "${_bat}"
    fi
  fi

  # other constraints
  if ! test -z "${QCONST}" ; then
    for _con in ${QCONST} ; do
      echo "#${que_ll_qsub} network.MPI = ${_con}"          >> "${_bat}"
    done
  fi

  # project
  if ! test -z "${QPROJ}" ; then
    echo "#${que_ll_qsub} account_no = ${QPROJ}"            >> "${_bat}"
  fi

  # qos
  if ! test -z "${QQOS}" ; then
    echo "#${que_ll_qsub} job_type = ${QQOS}"               >> "${_bat}"
  fi

  echo "#${que_ll_qsub} input  = ${QIN:-/dev/null}"         >> "${_bat}"
  echo "#${que_ll_qsub} output = ${QOUT:-StdOut}"           >> "${_bat}"
  echo "#${que_ll_qsub} error  = ${QERR:-ErrOut}"           >> "${_bat}"

  echo "#${que_ll_qsub} queue"                              >> "${_bat}"
}

function que/ll/mail/sub() {
  echo "Job ${LOADL_JOB_NAME}"
}

function que/ll/mail/msg() {
  local _m=""
  _m=$(date)
  if ! test -z "${LOADL_TOTAL_TASKS}" ; then
    echo "${_m}\nRunning on ${LOADL_TOTAL_TASKS} tasks"
  else
    echo "${_m}"
  fi
}
