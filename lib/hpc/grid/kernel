# TODO: help

function hpc/grid() {
  local _cmd="${1}"
  local _type=""
  local _query=""

  shift
  _type="${1:-all}"
  shift
  _grid=${1:-default}

  case "${_cmd}" in
    nodes)
      hpc/grid/nodes "${_type}" "${_grid}"
    ;;
    
    clone)
      shift
      local _start=${1:-2}
      local i
      for ((i=${_start};i<=${_grid};i++)) ; do
        echo ""
        sysmgr vm clone ${_type} vm${i}
      done
    ;;

    ip)
      # format: ip nicno type grid
      local _n=${_type:-0}
      _type="${1:-all}"
      shift
      _grid="${1:-default}"
      # echo $_n $_type $_grid

      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      import sys/vm/vbox/guest
      local _ip=""
      local i
      for i in ${_nodes} ; do
        _ip=$(sys/vm/vbox/guest/ip "${i}" ${_n})
        if empty "${_ip}" ; then _ip="down" ; fi
        echo "${i}: ${_ip}"
      done
    ;;

    mac)
      # format: mac nicno type grid
      local _n=${_type:-0}
      _type="${1:-all}"
      shift
      _grid="${1:-default}"
      # echo $_n $_type $_grid

      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      import sys/vm/vbox/guest
      local _mac=""
      local i
      for i in ${_nodes} ; do
        _mac=$(sys/vm/vbox/guest/mac "${i}" ${_n})
        if empty "${_mac}" ; then _mac="down" ; fi
        echo "${i}: ${_mac}"
      done
    ;;

    start|stop|pause)
      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      local i
      for i in ${_nodes} ; do
        echo ""
        sysmgr vm ${_cmd} ${i}
        sleep 1
      done
    ;;

    load)
      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      local i
      for i in ${_nodes} ; do
        sysmgr vm load ${i} | sed /^O.*/d
      done
    ;;

    top)
      watch -n 2 sysmgr grid load "${_type}" "${_grid}"
    ;;

    nic)
      # format: nic nicno nictype type grid
      local _n=${_type:-0}
      _t=${_grid:-none}
      shift
      _type="${1:-all}"
      shift
      _grid="${1:-default}"
      # echo $_n $_t $_type $_grid
       
      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      answer "Set NIC adapter ${_n} to ${_t} on ${_grid}/${_type}?"
      if failed $? ; then $failure ; fi
      for i in ${_nodes} ; do
        sysmgr vm nic ${i} ${_n} ${_t}
      done
    ;;

    macs)
      # format: mac nicno type grid
      local _n=${_type:-0}
      _type="${1:-all}"
      shift
      _grid="${1:-default}"
      # echo $_n $_type $_grid

      local _mac=""
      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      for i in ${_nodes} ; do
        _mac=$(sysmgr vm macs ${i} ${_n})
        echo "${i}: ${_mac}"
      done
    ;;

    dhcp)
      # format: dnsmasq startip type grid
      local _n=${_type:-0}
      _type="${1:-all}"
      shift
      _grid="${1:-default}"
      # echo $_n $_type $_grid

      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      local _ip=${_n}
      local _mac
      local i
      for i in ${_nodes} ; do
        # _ip=$(sysmgr vm ip ${i} ${hpc_grid_intnet_nic})
        _ip=$((_ip+1))
        _mac=$(sysmgr vm macs ${i} ${hpc_grid_intnet_nic} | sed -e 's/../&:/g' -e 's/:$//')
        echo "dhcp-host=${_mac},${i},${hpc_grid_intnet}${_ip}"
      done
    ;;

    dnsmasq)
      sysmgr grid dhcp 10 compute | sshexec vadmin "cat > /etc/dnsmasq.d/default"
      sshexec vadmin sudo service dnsmasq restart
    ;;

    sshkey)
      local _pub="$HOME/shf3/key/ssh/${hpc_grid_vadmin}.pub"
      if ! readable "${_pub}" ; then
        msg "Not found: ${_pub}"
        $failure
      fi

      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      local _ssh="/home/${hpc_grid_opuser}/.ssh"
      local _keys="${_ssh}/authorized_keys"
      local i
      for i in ${_nodes} ; do
        echo ""
        answer "Set SSH key for ${i}?"
        if failed $? ; then $failure ; fi
        cat "${_pub}" | \
        sshexec ${i} "mkdir ${_ssh}; cat > ${_keys}; chmod 600 ${_keys}"
      done
    ;;

    chef)
      # format: chef bootstrap nicno type grid
      local _n=${_type:-0}
      _t=${_grid:-none}
      shift
      _type="${1:-all}"
      shift
      _grid="${1:-default}"
      # echo $_n $_type $_grid
      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      local _ip=""
      local i
      for i in ${_nodes} ; do
        _ip=$(sysmgr vm ip ${i} ${_t})
        if empty "${_ip}" ; then continue ; fi
        answer "Chef Bootstrap ${i}?"
        if failed $? ; then continue ; fi
        sshexec ${i} "echo \"nameserver ${hpc_grid_vadmin_ip}\" | sudo tee /etc/resolv.conf"
        sshexec ${hpc_grid_vadmin} knife bootstrap ${_ip} -d ubuntu12.04-gems -x ${hpc_grid_opuser} --sudo
      done
    ;;

    ifup|ifdown)
      # format: ifup/ifdown eth? type grid
      local _n=${_type:-0}
      _type="${1:-all}"
      shift
      _grid="${1:-default}"
      # echo $_n $_type $_grid
      local _nodes=$(hpc/grid/nodes "${_type}" "${_grid}")
      local _ip=""
      local i
      for i in ${_nodes} ; do
        _ip=$(sysmgr vm ip ${i} 1)
        if empty "${_ip}" ; then continue ; fi
        answer "Interface: ${_cmd} ${_n} on ${i}?"
        if failed $? ; then continue ; fi
        sshexec ${i} sudo ${_cmd} ${_n}
      done

    ;;
  esac
}

function hpc/grid/query() {
  local _grid="${1}"
  shift
  local _query="${*}"

  local _f="${hpc_grid_dir}/${_grid}"
  if ! readable "${_f}" ; then
    echo ""
    $failure
  fi
  ${hpc_grid_nodeattr} -f "${_f}" ${_query}
}

function hpc/grid/nodes() {
  local _type="${1:-all}"
  local _grid=${2:-default}
  local _query="-q ${_type} -n"
  hpc/grid/query "${_grid}" ${_query}
}
