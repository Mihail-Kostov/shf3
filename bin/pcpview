#!/bin/bash
source $(dirname ${BASH_SOURCE})/../lib/header
import que
import gui
import sys/pcp

function help/pcpview() {
  cat << EOF
Usage: ${gbn} options
              -j jobid
              -n nodefile
              -m pbs nodefile
              -s scheduler
              -c - chart
              -a - node average
              -t - total memory
              -h - help
              -v - verbose
EOF
  exit 1
}

### trap
function pcpview/exit() {
  if test -z "${_n}" && \
     test -r "${_f}"; then
    rm -f "${_f}"
  fi
  exit $?
}
trap pcpview/exit INT TERM EXIT


### args
_job=0
_t=false
_a=false
_c=false
_n=""
_m=""
_s=""
while getopts htacj:n:m:s: o; do
  case "$o" in
    j) _job=$OPTARG;;
    t) _t=true;;
    a) _a=true;;
    c) _c=true;;
    s) _s=$OPTARG;;
    n) _n=$OPTARG;;
    m) _m=$OPTARG;;
    v) gdbg=true;;
    h|*) help/pcpview;;
  esac
done

# TODO
### main
if ! $(installed pmstat) ; then
  msg "Not found: pmstat"
  exit ${_false_}
fi

if ${_c} ; then
  if ! $(installed pmchart) ; then
    msg "Not found: pmchart"
    exit ${_false_}
  fi
fi


# nodefile
if ! test -z "${_n}" && \
     test -r "${_n}" ; then
  _nf="${_n}"

# pbs nodefile
elif ! test -z "${_m}" && \
     test -r "${_m}" ; then
  _nf="./.nodefile"
  cat "${_m}" | uniq > "${_nf}"

# begin job
else
  _nf="./.nodefile.${_job}"

  # scheduler
  if ! test -z "${ESZR_SCHEDULER}" ; then
    _sched="${ESZR_SCHEDULER}"
  fi
  if ! test -z "${_s}" ; then
    _sched="${_s}"
  fi
  if test -z "${_sched}" ; then
    msg "Scheduler not found"
    exit 1
  fi

  import que/${_sched}/job
  if test $? -gt 0 ; then
    msg "Module not found: que/${_sched}/job"
    exit 1
  fi

  if test -r "${_nf}" ; then
    rm -f "${_nf}"
  fi

  # job nodes
  _jn=$(que/${_sched}/job/nodes "${_job}")

  if test -z "${_jn}" ; then
    msg "Job not started"
    exit 1
  fi

  for i in ${_jn} ; do
    echo ${i} >> ${_nf}
  done
fi
# end job

### stat
if ${_c} ; then
  sys/pcp/chart "${_nf}" ${_h}
else
  sys/pcp/stat "${_nf}" ${_a} ${_t}
fi
