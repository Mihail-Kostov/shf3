
function help/run/chk() {
  cat << EOF
Program check

\$1 integer - check level
\$2 program - program
\$3 guide   - guide file

Check level:
 0 - program & guide
 1 - input directories
 2 - program specific
 3 - specific integrity
EOF
}

function run/chk() {
  import gui

  local _chk="${1:-0}"
  local _prg="${2}"
  local _guide="${3}"

  # check guide
  if test -z "${_guide}" || ! test -r "${_guide}" ; then
    msg "Guide ${_guide} not found"
    return ${_false_}
  fi

  # read guide
  source "${_guide}"

  # check program binary
  if ! test -x "${PRGBIN}" ; then
    msg "Program binary ${PRGBIN} not found"
    return ${_false_}
  fi

  # basic dir checks
  if test ${_chk} -gt 0 ; then
    local dir
    local _dir
    for dir in INPUTDIR; do
      # operator clean name
      _dir=$(ns/op/name "${!dir}" "+")
      if ! test -d "${_dir}" ; then
        msg "Directory \$${dir} not found"
        return ${_false_}
      fi
    done
  fi

  # specific check
  if test ${_chk} -gt 1 ; then
    import run/prg/${_prg}
    if test $? -gt 0 ; then
      msg "Module run/$prg/{_prg} not found"
      return ${_false_}
    fi
    run/prg/${_prg}/chk ${_chk}
    if test $? -gt 0 ; then
      return ${_false_}
    fi
  fi

  msg "${FUNCNAME}: All checks passed (${_chk})"
  return ${_true_}
}


function run/chk/main() {
  if test -z "${MAININPUT}" ; then
    msg "\$MAININPUT not set"
    return ${_false_}
  fi

  # operator clean name
  local _inp=$(ns/op/name "${MAININPUT}")
  local _idir=$(ns/op/name "${INPUTDIR}")
  _inp="${_idir}/${_inp}"

  if ! test -r "${_inp}" ; then
    msg "Main input not found ${_inp}"
    return ${_false_}
  fi
}


function run/chk/other() {
  local _input="${1:-OTHERINPUT}"

  # continue
  if test -z "${OTHERINPUT}" ; then
    return ${_true_}
  fi

  # operator clean name
  local _idir=$(ns/op/name "${INPUTDIR}")

  local inp
  local _inp
  for inp in ${!_input}; do
    _inp="${_idir}/${inp}"
    if ! test -r "${_inp}" ; then
      msg "Input not found: ${_inp}"
      return ${_false_}
    fi
  done
  return ${_true_}
}


function run/chk/data() {
  # continue
  if test -z "${DATADIR}" ; then
    return ${_true_}
  fi
  if test -z "${DATA}" ; then
    return ${_true_}
  fi

  # operator clean name
  local _ddir=$(ns/op/name "${DATADIR}")

  local _dat
  for _dat in ${DATA}; do
    _dat="${_ddir}/${_dat}"
    if ! test -r "${_dat}" ; then
      msg "Data not found: ${_dat}"
      return ${_false_}
    fi
  done
  return ${_true_}
}
