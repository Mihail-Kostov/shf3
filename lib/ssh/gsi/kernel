
function ssh/gsi/init() {
  import sys
  import ssh/key

  local _h="${1}"
  local _x_lck="${2:-${sys_lck_dir}/${gbn}.gsi.$$}"
  if test -z "${_h}" ; then
    return ${_false_}
  fi

  sys/mid "${_h}"
  local _sec="$(ssh/key/sec ${_h})"
  local _crt="$(ssh/key/crt ${_h})"

  # check
  if test -r "${_sec}" || test -r "${_crt}" ; then
    msg "Key not found"
    return ${_false_}
  fi

  # grid proxy init
  msg "Initialize Grid Proxy"
  local _x_opt=""

  # timeout
  if ! test -z "${mid_ssh_valid}" ; then
    _x_opt="-valid ${mid_ssh_valid}"
  fi

  # keys
  _x_opt="${_x_opt} -key ${_sec}"
  _x_opt="${_x_opt} -cert ${_crt}"
  _x_opt="${_x_opt} -out ${_x_lck}"

  # debug
  if ${gdbd} ; then
    _x_opt="-debug ${_x_opt}"
  fi

  ${ssh_gsi_init} ${_x_opt}
  if test $? -gt 0 ; then
    msg "Grid Proxy failed"
    return ${_false_}
  fi
  export X509_USER_PROXY=${_x_lck}
  msg "Grid Proxy initialized"
}

function ssh/gsi/destroy() {
  local _x_lck="${1:-${sys_lck_dir}/${gbn}.gsi.$$}"
  if ${gdbd} ; then
    _x_opt="-debug"
  fi
  if test -r "${_x_lck}" ; then
    ${ssh_gsi_destroy} ${_x_opt} "${_x_lck}"
  else
    msg "Grid Proxy Failed"
  fi
  unset X509_USER_PROXY
  msg "Grid Proxy destroyed"
}

