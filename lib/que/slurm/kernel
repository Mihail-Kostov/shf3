
function que/slurm() {
  local _sub="${1:-BATCH}"
  local _bat="${2:-slurm.batch.sh}"

  if test "${_sub}" = "LOGIN" ; then
    _bat="${2:-slurm.login.sh}"
  fi
  if ! test -r "${_bat}" ; then
    msg "Batch file not found"
    return ${_false_}
  fi

  ### begin login
  if test "${_sub}" = "LOGIN" ; then
    local _qlogin="${que_slurm_qlogin}"
    if ! $(u/installed "${_qlogin}") ; then
       msg "${_qlogin} not found"
       return ${_false_}
    fi

    # name
    _qlogin="${_qlogin} --job-name ${NAME}"

    # time
    if ! test -z "${TIME}" ; then
      _qlogin="${_qlogin} --time=${TIME}"
    fi

    # memory
    if ! test -z "${MEMORY}" ; then
      _qlogin="${_qlogin} --mem-per-cpu=${MEMORY}${que_slurm_unit}"
    fi

    # nodes
    if ! test -z "${NODES}" ; then
      _qlogin="${_qlogin} --nodes=${NODES}"
    fi

    # tasks
    if ! test -z "${TASKS}" ; then
      _qlogin="${_qlogin} --ntasks-per-node=${TASKS}"
    fi

    # gpus
    if ! test -z "${GPUS}" ; then
      _qlogin="${_qlogin} --gres=gpu:${GPUS}"
    fi

    # other constraints
    if ! test -z "${QCONST}" ; then
      local _const=""
      _qlogin="${_qlogin} --constraint="
      local _first=true
      local _c
      for _c in ${QCONST} ; do
        if ${_first} ; then
          _const="${_c}"
          _first=false
        else
          _const="${_const}\&${_c}"
        fi
      done
      _qlogin="${_qlogin}${_const}"
    fi

    # partition
    if ! test -z "${QPART}" ; then
      _qlogin="${_qlogin} --partition=${QPART}"
    fi

    # project
    if ! test -z "${QACC}" ; then
      _qlogin="${_qlogin} --account=${QACC}"
    fi

    echo "${_qlogin}" >> "${_bat}"
    return ${_true_}
  fi
  ### end login

  ### begin batch
  # name
  echo "#${que_slurm} --job-name ${NAME}"             >> "${_bat}"

  # mail
  if ! test -z "${QMAIL}" && test "${QMAIL}" != "runprg" ; then
    echo "#${que_slurm} --mail-type=${QMAIL}"         >> "${_bat}"
    if ! test -z "${QMAILTO}" ; then
      echo "#${que_slurm} --mail-user=${QMAILTO}"     >> "${_bat}"
    fi
  fi

  # time
  if ! test -z "${TIME}" ; then
    echo "#${que_slurm} --time=${TIME}"               >> "${_bat}"
  fi

  # memory
  if ! test -z "${MEMORY}" ; then
    local _mem="${MEMORY}${que_slurm_unit}"
    echo "#${que_slurm} --mem-per-cpu=${_mem}"        >> "${_bat}"
  fi

  if ! test -z "${NODES}" ; then
    echo "#${que_slurm} --nodes=${NODES}"             >> "${_bat}"
  fi

  if ! test -z "${TASKS}" ; then
      echo "#${que_slurm} --ntasks-per-node=${TASKS}" >> "${_bat}"
  fi

  if ! test -z "${GPUS}" ; then
      echo "#${que_slurm} --gres=gpu:${GPUS}"         >> "${_bat}"
  fi

  # other constraints
  if ! test -z "${QCONST}" ; then
    local _c
    for _c in ${QCONST} ; do
      echo "#${que_slurm} --constraint=${_c}"         >> "${_bat}"
    done
  fi

  # partition
  if ! test -z "${QPART}" ; then
    echo "#${que_slurm} --partition=${QPART}"         >> "${_bat}"
  fi

  # project
  if ! test -z "${QACC}" ; then
    echo "#${que_slurm} --account=${QACC}"            >> "${_bat}"
  fi

  # qos
  if ! test -z "${QQOS}" ; then
    echo "#${que_slurm} --qos=${QQOS}"                >> "${_bat}"
  fi

  # exclusive
  if test "${QEXCL}" = "yes" ; then
    echo "#${que_slurm} --exclusive"                  >> "${_bat}"
  fi

  # outputs
  echo "#${que_slurm} -o ${QOUT}"                     >> "${_bat}"
  echo "#${que_slurm} -e ${QERR}"                     >> "${_bat}"

  # other options
  if ! test -z "${QOPT}" ; then
    echo "#${que_slurm} ${QOPT}"                      >> "${_bat}"
  fi
}

function que/slurm/run() {
  local _q=$1
  shift
  local _s=$1
  shift
  local _c=$1
  shift
  local _x=$*

  ${que_slurm_run} -p ${_q} -B ${_s}:${_c} ${_x}
}


function que/slurm/mail/sub() {
  echo "Job ${SLURM_JOB_ID} (${SLURM_JOB_NAME})"
}

function que/slurm/mail/msg() {
  local _m=""
  _m=$(date)
  if ! test -z "${SLURM_JOB_NUM_NODES}" ; then
    echo "${_m}\nRunning on ${SLURM_JOB_NUM_NODES} nodes"
  else
    echo "${_m}"
  fi
}
