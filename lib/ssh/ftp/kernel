function cmp/ssh/ftp() {
  local _cur
  local _prev
  local _opts
  local _base
  COMPREPLY=()
  _cur="${COMP_WORDS[COMP_CWORD]}"
  _prev="${COMP_WORDS[COMP_CWORD-1]}"

  # options
  _opts="put get mode backup archive"

  COMPREPLY=($(compgen -W "${_opts}" -- ${_cur}))
  return 0
}
# TODO
# complete -F cmp/${i} ${i}

function put() {
  PUT $*
}
function PUT() {
  import ssh
  local _h=${1:-default}
  shift

  # sources
  local _s=${*}
  if test -z "${_s}" ; then
    return ${_false_}
  fi

  local i
  for i in ${_s} ; do
    if test -L "${i}" ; then
      # resolv symlinks
      import sys/dir
      # dir as dir
      i=${i%%/}
      local _p=$(ns/readlink "${i}")
      sys/dir/svwd "${_p}/.."
      ssh/put "${_h}" "${i}" ${_t}
      sys/dir/ldwd
    elif test -r "${i}" ; then
      ssh/put "${_h}" "${i}" ${_t}
    fi
  done
}

function RPUT() {
  import ssh
  local _h=${1:-default}
  shift

  # sources
  local _s=${*}
  if test -z "${_s}" ; then
    return ${_false_}
  fi

  local i
  for i in ${_s} ; do
    local i=$(cd "${i}";pwd)
    if test -d "${i}" ; then
      ssh/put "${_h}" "${i}" ${_t} true
    fi
  done
}

function get() {
  GET $*
}
function GET() {
  import ssh
  local _h=${1:-default}
  shift

  # sources
  local _s=${*}
  if test -z "${_s}" ; then
    return ${_false_}
  fi

  local i
  for i in ${_s} ; do
    ssh/get "${_h}" "${i}" ${_t}
  done
}

function RGET() {
  import ssh
  local _h=${1:-default}
  shift

  # sources
  local _s=${*}
  if test -z "${_s}" ; then
    return ${_false_}
  fi

  local i
  for i in ${_s} ; do
    ssh/get "${_h}" "${i}" ${_t} true
  done
}

function mode() {
  MODE $*
}
function MODE() {
  local _m="${1:-3}"
  _t=${_m}
}

function LS() {
  import ssh
  local _h=${1:-default}
  shift
  local _s="${*}"
  ssh/cmd "${_h}" "ls -l ${_s}"
}

# TODO USB sysarchive
function archive() {
  ARCHIVE $*
}
function ARCHIVE() {
  MODE 4
  BACKUP $*
}

function backup() {
  BACKUP $*
}
function BACKUP() {
  import sys
  import ssh
  import sys/dir

  local _h=${1:-default}
  shift

  sys/mid "ssh/${_h}"
  if test $? -gt 0 ; then
    msg "MID not found: ${_h}"
    return ${_false_}
  fi

  # sources
  local _s="${mid_ssh_backup_src}"
  if test -z "${_s}" ; then
    return ${_false_}
  fi

  # backup dir
  local _d="${mid_ssh_backup_dir}"
  if ! test -d "${_d}" ; then
    answer "Create backup dir: ${_d}?"
    if test $? -gt 0 ; then
      return ${_false_}
    fi
    sys/dir/mk "${_d}"
    if test $? -gt 0 ; then
      return ${_false_}
    fi
  fi
  sys/dir/svwd "${_d}"

  local i
  for i in ${_s} ; do
    ssh/get "${_h}" "${i}" ${_t}
  done
}
