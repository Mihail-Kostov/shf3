function que/sge() {
  local _sub="${1:-BATCH}"
  local _bat="${2:-sge.batch.sh}"

  if test "${_sub}" = "LOGIN" ; then
    _bat="${2:-sge.login.sh}"
  fi
  if ! test -r "${_bat}" ; then
    msg "Batch file not found"
    return ${_false_}
  fi

  ### begin login
  if test "${_sub}" = "LOGIN" ; then
    local _qlogin="${que_sge_qlogin}"

    # name
    _qlogin="${_qlogin} -N ${NAME}"


    # time
    if ! test -z "${TIME}" ; then
      _qlogin="${_qlogin} -l h_cpu=${TIME}"
    fi

    # memory
    if ! test -z "${MEMORY}" ; then
      _qlogin="${_qlogin} -l h_vmem=${MEMORY}${que_slurm_unit}"
    fi

    # gpus
    if ! test -z "${GPUS}" ; then
      _qlogin="${_qlogin} -l gpu=${GPUS}"
    fi

    # pe
    if ! test -z "${QPE}" ; then
      _qlogin="${_qlogin} -pe ${QPE} ${SLOTS}"
    fi

    # project
    if ! test -z "${QACC}" ; then
      _qlogin="${_qlogin} -A ${QACC}"
    fi

    # queue
    if ! test -z "${QQUEUE}" ; then
      _qlogin="${_qlogin} -q ${QQUEUE}"
    fi

    # exclusive
    if test "${QEXCL}" = "yes" ; then
      _qlogin="${_qlogin} -l exclusive=true"
    fi

    echo "${_qlogin}" >> "${_bat}"
    return ${_true_}
  fi
  ### end login

  ### begin batch 
  # name
  echo "#${que_sge} -N ${NAME}"                         >> "${_bat}"

  # shell
  if ! test -z "${QSHELL}" ; then
    echo "#${que_sge} -S ${QSHELL}"                     >> "${_bat}"
  fi

  # mail
  if ! test -z "${QMAIL}" && test "${QMAIL}" != "runprg" ; then
    echo "#${que_sge} -m ${QMAIL}"                      >> "${_bat}"
    if ! test -z "${QMAILTO}" ; then
      echo "#${que_sge} -M ${QMAILTO}"                  >> "${_bat}"
    fi
  fi

  # time
  if ! test -z "${TIME}" ; then
    echo "#${que_sge} -l h_cpu=${TIME}"                 >> "${_bat}"
  fi

  # memory
  if ! test -z "${MEMORY}" ; then
    local _mem=${MEMORY}
    # _mem=$((SLOTS*_mem))
    # _mem=$((TASKS*_mem))
    echo "#${que_sge} -l mem=${_mem}${que_sge_unit}"    >> "${_bat}"
  fi

  # binding
  if ! test -z "${QBIND}" ; then
    local _qbind="-binding ${QBIND}:${SLOTS}"
    echo "#${que_sge} ${_qbind}"                        >> "${_bat}"
  fi
  
  # arch
  if ! test -z "${QARCH}" ; then
    echo "#${que_sge} -l arch=${QARCH}"                 >> "${_bat}"
  fi

  # other constraints
  if ! test -z "${QCONST}" ; then
    echo "#${que_sge} -l ${QCONST}"                     >> "${_bat}"
  fi

  # pe
  if ! test -z "${QPE}" ; then
    echo "#${que_sge} -pe ${QPE} ${SLOTS}"              >> "${_bat}"
  fi

  # project
  if ! test -z "${QACC}" ; then
    echo "#${que_sge} -A ${QACC}"                       >> "${_bat}"
  fi

  # queue
  if ! test -z "${QQUEUE}" ; then
    echo "#${que_sge} -q ${QQUEUE}"                     >> "${_bat}"
  fi

  if test "${QEXCL}" = "yes" ; then
    echo "#${que_sge} -l exclusive=true"                >> "${_bat}"
  fi

  # gpus
  if ! test -z "${GPUS}" ; then
    echo "#${que_sge} -l gpu=${GPUS}"                   >> "${_bat}"
  fi

  if ! test -z "${QJSV}" ; then
    echo "#${que_sge} -jsv ${QJSV}"                     >> "${_bat}"
  fi

  echo "#${que_sge} -o ${QOUT}"                         >> "${_bat}"
  echo "#${que_sge} -e ${QERR}"                         >> "${_bat}"

  if ! test -z "${QOPT}" ; then
    echo "#${que_sge} ${QOPT}"                          >> "${_bat}"
  fi
}

function que/sge/mail/sub() {
  echo "Job ${JOB_ID} (${JOB_NAME})"
}

function que/sge/mail/msg() {
  local _m=""
  _msg=$(date)
  if ! test -z "${NSLOTS}" ; then
    echo "${_m}\nRunning on ${NSLOTS} nodes"
  else
    echo "${_m}"
  fi
}
