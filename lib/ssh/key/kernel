
function ssh/key() {
  local _h="${1:-default}"
  local _s="${2:-${ssh_key_sec}}"
  echo "${ssh_key_dir}/${_h}.${_s}"
}

function ssh/key/sec() {
  ssh/key "${1:-default}" "${ssh_key_sec}"
}

function ssh/key/pub() {
  ssh/key "${1:-default}" "${ssh_key_pub}"
}

function ssh/key/crt() {
  ssh/key "${1:-default}" "${ssh_key_crt}"
}

function ssh/key/p12() {
  ssh/key "${1:-default}" "${ssh_key_p12}"
}

function ssh/key/gen() {
  import sys
  import sys/dir
  import sys/lnk

  local _h="${1:-default}"
  local _t="${2:-${ssh_key_typ}}"
  local _l="${3:-${ssh_key_len}}"

  sys/mid "ssh/${_h}"
  if test $? -gt 0 ; then
    msg "MID not found"
    return ${_false_}
  fi

  # in ${ssh_key_dir}
  sys/dir/svwd "${ssh_key_dir}"

  local _sec="${_h}.id_${_t}"
  local __sec="${_h}.${ssh_key_sec}"
  local _pub="${_sec}.pub"
  local __pub="${_h}.${ssh_key_pub}"

  # check
  local i
  for i in ${__sec} ${__pub} ; do
    if test -r "${i}" ; then
      msg "Delete keys of ${_h} manually"
      return ${_false_}
    fi
  done

  # generate
  local _gdbg=""
  if ${gdbg} ; then
    _gdbg="-v"
  fi
  ${ssh_key_gen} ${_gdbg} -b ${_l} -t "${_t}" -f "${_sec}"
  if test $? -gt 0 ; then
    return ${_false_}
  fi

  # secure
  mv -f ${_gdbg} "${_sec}" "${__sec}"
  chmod ${_gdbg} 600 "${__sec}"

  mv -f ${_gdbg} "${_pub}" "${__pub}"
  chmod ${_gdbg} 600 "${__pub}"
}

function ssh/key/chg() {
  import sys
  import sys/dir
  local _h="${1:-default}"
  local _t="${2:-${ssh_key_typ}}"

  sys/mid "ssh/${_h}"
  if test $? -gt 0 ; then
    msg "MID not found"
    return ${_false_}
  fi

  # in ${ssh_key_dir}
  sys/dir/svwd "${ssh_key_dir}"

  local _sec="${_h}.${ssh_key_sec}"
  if ! test -r "${_sec}" ; then
    return ${_false_}
  fi
  local _gdbg=""
  if ${gdbg} ; then
    _gdbg="-v"
  fi
  ${ssh_key_gen} ${_gdbg} -p -f "${_sec}"
}
